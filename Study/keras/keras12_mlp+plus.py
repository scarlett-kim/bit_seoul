#1. 데이터
import numpy as np   

#(100,3) 데이터 만들기
# x=np.array([range(1, 101), range(311, 411), range(100)])
# x=np.transpose(x)

y = np.array([range(101, 201), range(711, 811), range(100)])
y = np.transpose(y) #100행 3열
# [[101 711   0]
#  [102 712   1]
#  [103 713   2]
#  [104 714   3]
#  [105 715   4]
#  [106 716   5]
#  [107 717   6]
#  [108 718   7]
#  [109 719   8]
#  [110 720   9]
#  [111 721  10]
#  [112 722  11]
#  [113 723  12]
#  [114 724  13]
#  [115 725  14]
#  [116 726  15]
#  [117 727  16]
#  [118 728  17]
#  [119 729  18]
#  [120 730  19]
#  [121 731  20]
#  [122 732  21]
#  [123 733  22]
#  [124 734  23]
#  [125 735  24]
#  [126 736  25]
#  [127 737  26]
#  [128 738  27]
#  [129 739  28]
#  [130 740  29]
#  [131 741  30]
#  [132 742  31]
#  [133 743  32]
#  [134 744  33]
#  [135 745  34]
#  [136 746  35]
#  [137 747  36]
#  [138 748  37]
#  [139 749  38]
#  [140 750  39]
#  [141 751  40]
#  [142 752  41]
#  [143 753  42]
#  [144 754  43]
#  [145 755  44]
#  [146 756  45]
#  [147 757  46]
#  [148 758  47]
#  [149 759  48]
#  [150 760  49]
#  [151 761  50]
#  [152 762  51]
#  [153 763  52]
#  [154 764  53]
#  [155 765  54]
#  [156 766  55]
#  [157 767  56]
#  [158 768  57]
#  [159 769  58]
#  [160 770  59]
#  [161 771  60]
#  [162 772  61]
#  [163 773  62]
#  [164 774  63]
#  [165 775  64]
#  [166 776  65]
#  [167 777  66]
#  [168 778  67]
#  [169 779  68]
#  [170 780  69]
#  [171 781  70]
#  [172 782  71]
#  [173 783  72]
#  [174 784  73]
#  [175 785  74]
#  [176 786  75]
#  [177 787  76]
#  [178 788  77]
#  [179 789  78]
#  [180 790  79]
#  [181 791  80]
#  [182 792  81]
#  [183 793  82]
#  [184 794  83]
#  [185 795  84]
#  [186 796  85]
#  [187 797  86]
#  [188 798  87]
#  [189 799  88]
#  [190 800  89]
#  [191 801  90]
#  [192 802  91]
#  [193 803  92]
#  [194 804  93]
#  [195 805  94]
#  [196 806  95]
#  [197 807  96]
#  [198 808  97]
#  [199 809  98]
#  [200 810  99]]

# print(x)
# print(x.shape)

print(y) #y 값 아래와 같이 나옴 3행 100열
# [[101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118
#   119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136
#   137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154
#   155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172
#   173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190
#   191 192 193 194 195 196 197 198 199 200]
#  [711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728
#   729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746
#   747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764
#   765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782
#   783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800
#   801 802 803 804 805 806 807 808 809 810]
#  [  0   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17
#    18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35
#    36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52  53
#    54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69  70  71
#    72  73  74  75  76  77  78  79  80  81  82  83  84  85  86  87  88  89
#    90  91  92  93  94  95  96  97  98  99]]





# from sklearn.model_selection import train_test_split 

# x_train, x_test, y_train, y_test=train_test_split(x, y, test_size=0.2)
# x_train, x_val, y_train, y_val=train_test_split(x_train, y_train, test_size=0.2)


# #모델 구성
# from tensorflow.keras.models import Sequential
# from tensorflow.keras.layers import Dense

# model=Sequential()
# model.add(Dense(1000, input_shape=(100,3)))
# model.add(Dense(5000))
# model.add(Dense(500))
# model.add(Dense(3))

# #컴파일, 훈련
# model.compile(loss='mse', optimizer='adam')
# model.fit(x_train, y_train, epochs=100, batch_size=5, validation_data=(x_val, y_val))

# #평가, 예측
# y_pred=model.predict(x_test)
# loss=model.evaluate(x_test, y_test, batch_size=5)

# print('결과 : ', y_pred)
# print('loss : ', loss)

# from sklearn.metrics import mean_squared_error 
# def RMSE(y_test, y_pred) :
#     return np.sqrt(mean_squared_error(y_test, y_pred))
# print('RMSE : ', RMSE(y_test, y_pred))

# from sklearn.metrics import r2_score
# r2=r2_score(y_test, y_pred)
# print('R2 : ', r2)
